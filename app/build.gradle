apply plugin: 'com.android.application'

// 游戏通常使用 java，不需要配置 kotlin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: "kotlin-kapt"

// 导入 KSSYOmniPlugin
apply from: ("${rootProject.rootDir}/kssyOmniPlugin.gradle")

// 导入 OmniSDK 依赖
apply from: ("${rootProject.rootDir}/kssyOmniChannelsApp.gradle")
// 导入 OmniSDK 依赖
apply from: ("${rootProject.rootDir}/kssyOmniChannels.gradle")

// 签名配置，为保证安全，密钥密码不要明文配置在这里，而是通过文件读取方式配置。比如 signing.properties
def signingPro = new Properties()
signingPro.load(new FileInputStream(file(rootProject.file("signing.properties"))))

// 签名变量，注意这里加 ext. 以便全局可以引用到
ext.signing_keystoreFile = file("${rootProject.rootDir}/${signingPro["storeFilePath"]}")
ext.signing_keystorePassword = signingPro["storePassword"]
ext.signing_keyAlias = signingPro["keyAlias"]
ext.signing_keyPassword = signingPro["keyPassword"]

android {
    compileSdkVersion 31 // 这里因部分Android官方依赖库要求最低 31
        // buildToolsVersion 如果引擎导出有此配置请直接注释删除，由 compileSdkVersion 控制

    defaultConfig {
        // applicationId "com.kingsoft.shiyou.omnisdk.demo" //不要配置，编译插件自动读取配置文件包名
        minSdkVersion 21
        targetSdkVersion 28 // 国内最低28，海外最低31，渠道指定版本由OmniSDK编译插件处理。
        // 不用理会 targetSdkVersion 的IDE红线提示
        versionCode 99999999 // 防止应用商店自动更新
        versionName "109.9"

        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a"
        }
//
//		splits {
//			abi {
//				enable true // 是否启用ABI拆分机制，默认
//				reset()
//				include "arm64-v8a", "armeabi-v7a" // 指明哪些ABI要拆分，现在通常就一个64位，比如*64*.apk
//				universalApk true // 是否打包一个通用版本，包含所有的ABI：*universal*.apk
//			}
//		}

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        // 默认签名
        release {
            storeFile signing_keystoreFile
            storePassword signing_keystorePassword
            keyAlias signing_keyAlias
            keyPassword signing_keyPassword
        }
        debug {
            storeFile signing_keystoreFile
            storePassword signing_keystorePassword
            keyAlias signing_keyAlias
            keyPassword signing_keyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled true // 开启代码混淆：保护代码、减少包大小
            // 64k方法数分包配置
            multiDexKeepProguard = file("multidex-config.pro")
            // 混淆配置
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
//            signingConfig signingConfigs.release // 注释掉这行，其他不变，签名版本由 kssyOmniSigning.gradle 配置控制
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "${JavaVersion.VERSION_1_8}"
    }

    lintOptions {
        abortOnError false
    }

}

// 注意这行的顺序，是在 android{} 下方声明
apply from: ("${rootProject.rootDir}/kssyOmniSigning.gradle")

dependencies {
    implementation fileTree(include: ['*.aar'], dir: 'libs')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation(project(":library"))
}